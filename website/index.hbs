---
pagination:
  data: puzzles
  size: 1
  alias: puzzle
---
<!DOCTYPE html>
<html>

<head>
    <title>Ringram</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link rel="stylesheet" href="/stylistic_styles.css" />
    <link rel="stylesheet" href="/practical_styles.css" />
    
    <script src="/alpine.min.js" defer></script>
    <script>
        let patternmap = {{{json morse}}}
        function morse(l) {
            // coerce to uppercase
            let letter = l.toUpperCase();
            if (!patternmap[letter]) {
                return "";
            }
            return patternmap[letter];
        }
        function letterToDotsDashes(letter) {
            // returns dots, dashes (integers) for a given letter
            let dots = 0;
            let dashes = 0;
            let pattern = morse(letter);
            for (let i = 0; i < pattern.length; i++) {
                if (pattern[i] === ".") {
                    dots++;
                } else if (pattern[i] === "-") {
                    dashes++;
                }
            }
            return {dots, dashes};
        }
        function listToDotsDashes(letterList) {
            // returns dots, dashes (integers) for a given list of letters
            let dots = 0;
            let dashes = 0;
            for (let i = 0; i < letterList.length; i++) {
                let {dots: d, dashes: da} = letterToDotsDashes(letterList[i]);
                dots += d;
                dashes += da;
            }
            return {dots, dashes};
        }
    </script>
    <script>
        function findTabStop(direction, el) {
            // find next (direction 1) or previous (direction -1) tab stop from el
            var universe = document.querySelectorAll('input, button, select, textarea, a[href]');
            var list = Array.prototype.filter.call(universe, function(item) {return item.tabIndex >= "0" && !item.disabled && !item.hidden;});
            var index = list.indexOf(el);
            if (direction == 1) {
                return list[index + 1] || list[0];
            } else if (direction == -1) {
                return list[index - 1] || list[list.length - 1];
            }
        }
    </script>
    <script data-goatcounter="https://ringram.goatcounter.com/count"
        async src="//gc.zgo.at/count.js"></script>
</head>

<body>
    <header>
        <h1>
            RINGRAM
            <a href="#tutorial" class="help">
                <span>?</span>
            </a>
        </h1>
    </header>
    <main
    {{#with puzzle}}
        x-data='{
            letter0: "{{getindex (flatten letters) 0}}",
            letter1: "{{getindex (flatten letters) 1}}",
            letter2: "{{getindex (flatten letters) 2}}",
            letter3: "{{getindex (flatten letters) 3}}",
            letter4: "{{getindex (flatten letters) 4}}",
            letter5: "{{getindex (flatten letters) 5}}",
            letter6: "{{getindex (flatten letters) 6}}",
            letter7: "{{getindex (flatten letters) 7}}",
            letter8: "{{getindex (flatten letters) 8}}",
            letter9: "{{getindex (flatten letters) 9}}",
            letter10: "{{getindex (flatten letters) 10}}",
            letter11: "{{getindex (flatten letters) 11}}",
            selected: -1,
            showonlyvalid: false,
            dotsTop: [{{dots-top}}],
            dotsLeft: [{{dots-left}}],
            dashesRight: [{{dashes-right}}],
            dashesBottom: [{{dashes-bottom}}],
            {{#if ( eq 4 ( length letters ) )}}
            get letters () {
                return [
                    [this.letter0, this.letter1, this.letter2, this.letter3],
                    [this.letter4,                             this.letter5],
                    [this.letter6,                             this.letter7],
                    [this.letter8, this.letter9, this.letter10, this.letter11],
                ]
            },
            get lettersTransposed() {
                return [
                    [this.letter0, this.letter4, this.letter6, this.letter8],
                    [this.letter1,                             this.letter9],
                    [this.letter2,                             this.letter10],
                    [this.letter3, this.letter5, this.letter7, this.letter11],
                ]
            },
            rowOf(index) {
                if (index < 0) return -1;
                else if (index <= 3) return 0;
                else if (index <= 5) return 1;
                else if (index <= 7) return 2;
                else if (index <= 11) return 3;
                else return -1;
            },
            columnOf(index) {
                if ([0, 4, 6, 8].includes(index)) return 0;
                else if ([1, 9].includes(index)) return 1;
                else if ([2, 10].includes(index)) return 2;
                else if ([3, 5, 7, 11].includes(index)) return 3;
                else return -1;
            },
            {{/if}}
            {{#if ( eq 3 ( length letters ) )}}
            get letters () {
                return [
                    [this.letter0, this.letter1, this.letter2],
                    [this.letter3,               this.letter4],
                    [this.letter5, this.letter6, this.letter7],
                ]
            },
            get lettersTransposed() {
                return [
                    [this.letter0, this.letter3, this.letter5],
                    [this.letter1,               this.letter6],
                    [this.letter2, this.letter4, this.letter7],
                ]
            },
            rowOf(index) {
                if (index < 0) return -1;
                else if (index <= 2) return 0;
                else if (index <= 4) return 1;
                else if (index <= 7) return 2;
                else return -1;
            },
            columnOf(index) {
                if ([0, 3, 5].includes(index)) return 0;
                else if ([1, 6].includes(index)) return 1;
                else if ([2, 4, 7].includes(index)) return 2;
                else return -1;
            },
            {{/if}}
            get rows() {
                return this.letters.map(listToDotsDashes)
            },
            get columns() {
                return this.lettersTransposed.map(listToDotsDashes)
            },
            get minDotsAvailable() {
                if (this.selected == -1) return 999;
                return Math.min(
                    this.dotsLeft[this.rowOf(this.selected)] - this.rows[this.rowOf(this.selected)].dots,
                    this.dotsTop[this.columnOf(this.selected)] - this.columns[this.columnOf(this.selected)].dots
                );
            },
            get minDashesAvailable() {
                if (this.selected == -1) return 999;
                return Math.min(
                    this.dashesRight[this.rowOf(this.selected)] - this.rows[this.rowOf(this.selected)].dashes,
                    this.dashesBottom[this.columnOf(this.selected)] - this.columns[this.columnOf(this.selected)].dashes
                );
            }
        }'
        {{/with}}
    >
        {{#with puzzle}}
        <form id="puzzle"
            {{#if ( eq 4 ( length letters ) )}}
                class="four puzzle"
            {{/if}}
            {{#if ( eq 3 ( length letters ) )}}
                class="three puzzle"
            {{/if}}
        >
            <!-- centre -->
            <div class="centre"></div>

            <!-- top dots -->
            {{#each [dots-top]}}
            <div class="top dots _{{@index}}" x-data="{ ind: {{@index}}, tot: {{this}} }">
                {{#each (list this)}}
                <div class="dot" :class="[columns[ind].dots > {{@index}} ? 'used' : '', columns[ind].dots > {{@index}} + tot ? 'over' : '']"></div>
                {{!-- <span x-text="columns[ind].dots + ' dots'"></span> --}}
                {{!-- <span><span x-text="ind"></span>, {{@index}}</span> --}}
                {{/each}}
                <template x-if="tot == 0">
                    <div class="dot" :class="[columns[ind].dots > 0 ? 'over' : 'hidden']"></div>
                </template>
            </div>
            {{/each}}

            <!-- left dots -->
            {{#each [dots-left]}}
            <div class="left dots _{{@index}}" x-data="{ ind: {{@index}}, tot: {{this}} }">
                {{#each (list this)}}
                <div class="dot" :class="[rows[ind].dots > {{@index}} ? 'used' : '', rows[ind].dots > {{@index}} + tot ? 'over' : '']"></div>
                {{/each}}
                <template x-if="tot == 0">
                    <div class="dot" :class="[rows[ind].dots > 0 ? 'over' : 'hidden']"></div>
                </template>
            </div>
            {{/each}}

            <!-- bottom dashes -->
            {{#each [dashes-bottom]}}
            <div class="bottom dashes _{{@index}}" x-data="{ ind: {{@index}}, tot: {{this}} }">
                {{#each (list this)}}
                <div class="dash" :class="columns[ind].dashes > {{@index}}?(columns[ind].dashes>({{@index}} + tot)?'over':'used'):''"></div>
                {{/each}}
                <template x-if="tot == 0">
                    <div class="dash" :class="[columns[ind].dashes > 0 ? 'over' : 'hidden']"></div>
                </template>
            </div>
            {{/each}}

            <!-- right dashes -->
            {{#each [dashes-right]}}
            <div class="right dashes _{{@index}}" x-data="{ ind: {{@index}}, tot: {{this}} }">
                {{#each (list this)}}
                <div class="dash" :class="rows[ind].dashes > {{@index}}?(rows[ind].dashes>({{@index}} + tot)?'over':'used'):''"></div>
                {{/each}}
                <template x-if="tot == 0">
                    <div class="dash" :class="[rows[ind].dashes > 0 ? 'over' : 'hidden']"></div>
                </template>
            </div>
            {{/each}}

            <!-- inputs -->
            {{#each (flatten letters)}}
            {{#if this}}
            <input type="text" value="{{this}}" disabled x-model="letter{{@index}}" />
            {{else}}
            {{!-- go to prev input on left --}}
            {{!-- go to prev input on backspace --}}
            {{!-- go to next input on right--}}
            <input type="text" maxlength="1" x-model="letter{{@index}}" {{#if @first}}{{else}}x-on:keydown.backspace.throttle="if ($event.target.value === '') {findTabStop(-1, $event.target).focus()}"{{/if}} {{#if @first}}{{else}}x-on:keydown.left.prevent="findTabStop(-1, $event.target).focus()"{{/if}} {{#if @last}}{{else}}x-on:keydown.right="findTabStop(1, $event.target).focus()"{{/if}} x-on:focus="selected={{@index}}" x-on:focusout="selected=-1"/>
            {{/if}}
            {{/each}}
        </form>
        {{/with}}

        {{!-- debugging for currently selected input and remaining dots/dashes --}}
        {{!-- <div>
            selected: <span x-text="selected"></span>
            <br>
            row: <span x-text="rowOf(selected)"></span>
            <template x-if="rowOf(selected) != -1">
                <div>
                    <br>
                    dots-total: <span x-text="dotsLeft[rowOf(selected)]"></span>
                    dashes-total: <span x-text="dashesRight[rowOf(selected)]"></span>
                    <br>
                    dots-used: <span x-text="rows[rowOf(selected)].dots"></span>
                    dashes-used: <span x-text="rows[rowOf(selected)].dashes"></span>
                    <br>
                    dots-remaining: <span x-text="dotsLeft[rowOf(selected)] - rows[rowOf(selected)].dots"></span>
                    dashes-remaining: <span x-text="dashesRight[rowOf(selected)] - rows[rowOf(selected)].dashes"></span>
                </div>
            </template>
            <br>
            col: <span x-text="columnOf(selected)"></span>
            <template x-if="columnOf(selected) != -1">
                <div>
                    <br>
                    dots-total: <span x-text="dotsTop[columnOf(selected)]"></span>
                    dashes-total: <span x-text="dashesBottom[columnOf(selected)]"></span>
                    <br>
                    dots-used: <span x-text="columns[columnOf(selected)].dots"></span>
                    dashes-used: <span x-text="columns[columnOf(selected)].dashes"></span>
                    <br>
                    dots-remaining: <span x-text="dotsTop[columnOf(selected)] - columns[columnOf(selected)].dots"></span>
                    dashes-remaining: <span x-text="dashesBottom[columnOf(selected)] - columns[columnOf(selected)].dashes"></span>
                </div>
            </template>
            <template x-if="selected != -1">
                <div>
                    <br>
                    minimum dots available: <span x-text="minDotsAvailable"></span>
                    or <span x-text="Math.min(dotsLeft[rowOf(selected)] - rows[rowOf(selected)].dots, dotsTop[columnOf(selected)] - columns[columnOf(selected)].dots)"></span>
                    minimum dashes available: <span x-text="minDashesAvailable"></span>
                    or <span x-text="Math.min(dashesRight[rowOf(selected)] - rows[rowOf(selected)].dashes, dashesBottom[columnOf(selected)] - columns[columnOf(selected)].dashes)"></span>
                </div>
            </template>
        </div> --}}

        <section class="nextprev">
            <a href="/">today's 3x3</a>
            <a href="/1">today's 4x4</a>
        </section>

        <section class="morse" x-data="{
            showMore: false,
            vmorse: false,
            highlightvowels: false,
            filterdots: 0,
            filterdashes: 0,
            sort: 'alphabet',
            sortReverse: false,
            doSort: function() {
                const list = document.querySelector('section.cheatsheet');

                let datatag;
                let compare = this.sortReverse ? -1 : 1;
                if (this.sort == 'alphabet') {
                    datatag = 'data-sort-alphabet';
                } else if (this.sort == 'dots') {
                    datatag = 'data-sort-dots';
                    compare *= -1;
                } else if (this.sort == 'dashes') {
                    datatag = 'data-sort-dashes';
                    compare *= -1;
                }

                [...list.children]
                    .sort((a, b) => a.getAttribute(datatag) > b.getAttribute(datatag) ? compare : compare * -1)
                    .forEach(node => list.appendChild(node));
            }
            }" x-init="
            $watch('sort', val => {
                doSort()
            });
            $watch('sortReverse', val => {
                doSort()
            });
            ">
            <template x-if="!showMore">
                <button class="showfilter" role="button" x-on:click="showMore = true">show filtering options</button>
            </template>
            <template x-if="showMore">
                <form>
                    {{!-- only valid letters makes things too easy --}}
                    {{!-- <label for="showonlyvalid">Show only valid letters</label>
                    <input type="checkbox" id="showonlyvalid" x-model="showonlyvalid" /> --}}
                    <label for="highlightvowels">Highlight vowels</label>
                    <input type="checkbox" id="highlightvowels" x-model="highlightvowels" />
                    <br>
                    <label class="filterdots" for="filterdots">Filter dots (<span x-text="filterdots"></span>)</label>
                    <input type="range" id="filterdots" x-model="filterdots" min="0" max="4" step="1">
                    <br>
                    <label class="filterdashes" for="filterdashes">Filter dashes (<span x-text="filterdashes"></span>)</label>
                    <input type="range" id="filterdashes" x-model="filterdashes" min="0" max="3" step="1">
                    <br>
                    <fieldset>
                        <legend>Sort</legend>
                        <input type="radio" id="sort-alphabet" name="sort" value="alphabet" x-model="sort">
                        <label for="sort-alphabet">Alphabetically</label>
                        <input type="radio" id="sort-dots" name="sort" value="dots" x-model="sort">
                        <label for="sort-dots">By Dots</label>
                        <input type="radio" id="sort-dashes" name="sort" value="dashes" x-model="sort">
                        <label for="sort-dashes">By Dashes</label>
                        <br>
                        <input type="checkbox" id="sortReverse" x-model="sortReverse">
                        <label for="sortReverse">Reverse?</label>
                    </fieldset>
                    <br>
                    <button class="showfilter" role="button" x-on:click="showMore = false">hide filtering options</button>
                </form>
            </template>
            <section class="cheatsheet">
                {{#each morse}}
                <div class="letter" data-sort-alphabet="{{@key}}" data-sort-dots="{{ndots this}}" data-sort-dashes="{{ndashes this}}">
                <div
                    class="translation"
                    :class="(
                        showonlyvalid
                        && ({{ndots this}} > minDotsAvailable || {{ndashes this}} > minDashesAvailable)
                    )
                    || (highlightvowels
                        && !['A','E','I','O','U','Y'].includes('{{@key}}')
                    )
                    || (
                        (filterdots > 0 || filterdashes > 0)
                        && (filterdots != {{ndots this}} || filterdashes != {{ndashes this}})
                    )
                    ? 'unavailable' : ''"
                >
                    <span class="original">
                        {{@key}}
                    </span>
                    <span class="morse">
                    {{#each (strToList this)}}
                        {{#if (eq this ".")}}
                        <div class="dot used"></div>
                        {{else}}
                        <div class="dash used"></div>
                        {{/if}}
                    {{/each}}
                    </span>
                </div>
                </div>
                {{/each}}
            </section>
        </section>
        <section class="tutorial" id="tutorial">
            <h2>How to play Ringram</h2>
            <p>
                A completed Ringram puzzle looks like four English words
            </p>
            <div class="three puzzle">
                <div class="centre"></div>
                <input type="text" value="B" disabled />
                <input type="text" value="A" disabled />
                <input type="text" value="T" disabled />
                <input type="text" value="U" disabled />
                <input type="text" value="O" disabled />
                <input type="text" value="N" disabled />
                <input type="text" value="E" disabled />
                <input type="text" value="T" disabled />
            </div>
            <p>
                Each letter is represented by a series of dots and dashes (morse code!). For example, in Morse Code, the letter A is one dot followed by one dash: <span class="dot used inline-block"></span> <span class="dash used inline-block"></span>.
                The word BAT would be:
                <span class="dash used inline-block"></span>
                <span class="dot used inline-block"></span>
                <span class="dot used inline-block"></span>
                <span class="dot used inline-block"></span>
                /
                <span class="dot used inline-block"></span>
                <span class="dash used inline-block"></span>
                /
                <span class="dash used inline-block"></span>
                , a total of 4 dots and 3 dashes
            </p>
            <p>
                The puzzle grid shows the total number of dots and dashes in each column and row.
            </p>
            <div class="three puzzle">
                <input type="text" value="B" disabled />
                <input type="text" value="A" disabled />
                <input type="text" value="T" disabled />
                <div class="left dots _0">
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                </div>
                <div class="right dashes _0">
                    <div class="dash used"></div>
                    <div class="dash used"></div>
                    <div class="dash used"></div>
                </div>
            </div>
            <p>
                In Ringram, use the Morse Code clues to find the missing letters and solve the grid! Dots and dashes are coloured when they are used up, or red if too many are used.
            </p>
            <div class="three puzzle">
                <input type="text" value="B" disabled />
                <input type="text" value="" disabled />
                <input type="text" value="" disabled />
                <div class="left dots _0">
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot"></div>
                </div>
                <div class="right dashes _0">
                    <div class="dash used"></div>
                    <div class="dash"></div>
                    <div class="dash"></div>
                </div>
            </div>
            <br>
            <div class="three puzzle">
                <input type="text" value="B" disabled />
                <input type="text" value="U" disabled />
                <input type="text" value="N" disabled />
                <div class="left dots _0">
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot used"></div>
                    <div class="dot over" style="animation: none"></div>
                    <div class="dot over" style="animation: none"></div>
                </div>
                <div class="right dashes _0">
                    <div class="dash used"></div>
                    <div class="dash used"></div>
                    <div class="dash used"></div>
                </div>
            </div>
            <p>
                The puzzle is complete if you can fill in the grid with English words! (solution checker coming soon)
            </p>
        </section>
        <section class="faq" id="faq">
            <h2>Frequently Asked Questions</h2>
            <h3>Can I see yesterday's puzzle?</h3>
            <div class="nextprev">
                <a href="/2">yesterday's 3x3 solution</a>
                <a href="/3">yesterday's 4x4 solution</a>
            </div>
            <h3>When does the new puzzle come out?</h3>
            <p>
                Midnight <a href="https://time.is/UTC">UTC</a>
            </p>
            <h3>What is the word list?</h3>
            <p>
                There is a <a href="/words_3-letters.txt">3x3 word list</a> and a <a href="/words_4-letters.txt">4x4 word list</a>. Also see them in the <a href="https://github.com/alifeee/ringram/tree/main/generation">source</a>.
            <h3>Can I get more puzzles?</h3>
            <p>
                No. Come back tomorrow!
            </p>
            <h3>Can I suggest a feature?</h3>
            <p>
                Sure! Send an email below.
            </p>
            <h3>Can I save my guesses if I refresh/save my stats?</h3>
            <p>
                Not yet. Maybe later :)
            </p>
        </section>
    </main>
    <footer>
        <p>
            created by <a href="https://alexvscoding.itch.io/">alexvscoding</a> & <a href="https://alifeee.co.uk">alifeee</a> (<a href="mailto:ringram@alfierenn.dev">email</a>) · <a href="https://github.com/alifeee/ringram">view source</a>
        </p>
    </footer>
</body>
</html>
